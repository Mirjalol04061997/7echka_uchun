{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["AxiosApi","weekdayNameShort","date","Date","month","getMonth","day","getDate","weekDay","getDay","useState","name","temperatura","max_temp","min_temp","icon","countryDomen","feels_like","speed","deg","description","massiv","setMassiv","className","type","placeholder","onClick","val","document","querySelector","value","card","alert","axios","get","then","res","newMassiv","data","Math","round","main","temp","temp_max","temp_min","weather","sys","country","wind","style","opacity","focus","catch","error","console","log","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6a09ec98.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nexport default function AxiosApi() {\n  const monthName = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const weekdayName = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n  const weekdayNameShort = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n  const date = new Date();\n  const month = date.getMonth();\n  const day = date.getDate();\n  const weekDay = date.getDay();\n  const [massiv, setMassiv] = useState({\n    name: \"\",\n    temperatura: 0,\n    max_temp: 0,\n    min_temp: 0,\n    icon: \"\",\n    countryDomen: \"\",\n    feels_like: 0,\n    speed: 0,\n    deg: 0,\n    description: \"\",\n  });\n  const submitVal = () => {\n    var val = document.querySelector(\"input\").value;\n    var card = document.querySelector(\".info-card\");\n    var alert = document.querySelector(\".error\");\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${val}&appid=101ea9f1106fdf54582ea740dde95351`\n      )\n      .then((res) => {\n        var newMassiv = [];\n        newMassiv = res.data;\n        setMassiv({\n          name: newMassiv.name,\n          temperatura: Math.round(newMassiv.main.temp - 273.12),\n          max_temp: Math.round(newMassiv.main.temp_max - 273.12),\n          min_temp: Math.round(newMassiv.main.temp_min - 273.12),\n          feels_like: Math.round(newMassiv.main.feels_like - 273.12),\n          icon: newMassiv.weather[0].icon,\n          countryDomen: newMassiv.sys.country,\n          speed: newMassiv.wind.speed,\n          deg: newMassiv.wind.deg,\n          description: newMassiv.weather[0].description,\n        });\n        alert.style.opacity = 0;\n        card.style.opacity = 1;\n        document.querySelector(\"input\").value = \"\";\n        document.querySelector(\"input\").focus();\n      })\n      .catch((error) => {\n        console.log(error);\n        card.style.opacity = 0;\n        alert.style.opacity = 1;\n        document.querySelector(\"input\").value = \"\";\n        document.querySelector(\"input\").focus();\n      });\n  };\n  return (\n    <div className=\"head\">\n      <div className=\"card-form\">\n        <input type=\"text\" placeholder=\"Enter your country...\" />\n        <button onClick={submitVal}>Search</button>\n      </div>\n      <div className=\"alert alert-light error\">\n        <h1 className=\"text-dark\">Such a city does not exist</h1>\n      </div>\n      <div className=\"info-card\">\n        <div className=\"qator\">\n          <div className=\"city-name\">\n            <img src=\"https://img.icons8.com/office/30/000000/place-marker--v2.png\" alt=\"error\" />\n            <h2>\n              {massiv.name}, {massiv.countryDomen}\n            </h2>\n          </div>\n          <div className=\"monthDay\">{monthName[month]} {day}</div>\n        </div>\n        <div className=\"qator\">\n          <h3 className=\"days\">{weekdayName[weekDay]}</h3>\n        </div>\n        <div className=\"qator\">\n          <div className=\"weather-img column\">\n            <img\n              src={`http://openweathermap.org/img/wn/${massiv.icon}@2x.png`}\n              alt=\"error\" \n            />\n            <p className=\"weather-wiew\">{massiv.description}</p>\n          </div>\n          <div className=\"weather-temp column\">\n            <h1>\n              {massiv.temperatura}\n              <sup>&deg;</sup>\n            </h1>\n            <p>Feels Like {massiv.feels_like} &deg;</p>\n          </div>\n          <div className=\"weather-min-max-temp column\">\n            <p className=\"minMax\">\n              <img\n                className=\"arrow\"\n                src=\"https://img.icons8.com/color-glass/48/000000/expand-arrow.png\" alt=\"error\" \n              />\n              {massiv.min_temp}&deg; |{\" \"}\n              <img\n                className=\"arrow arrowUp\"\n                src=\"https://img.icons8.com/color-glass/48/000000/expand-arrow.png\" alt=\"error\" \n              />\n              {massiv.max_temp}&deg;\n            </p>\n            <div>\n              <p>Speed: {massiv.speed}km/h</p>\n              <p>\n                <img src=\"https://img.icons8.com/officexs/30/000000/hygrometer.png\" alt=\"error\"  />\n                &nbsp;&nbsp;\n                {massiv.deg}%\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"qator\">\n          <div className=\"box\">\n            <div className=\"kun\">{weekdayNameShort[weekDay - 1]}</div>\n            <img\n              src={`http://openweathermap.org/img/wn/${massiv.icon}@2x.png`}\n              alt=\"error\" \n            />\n            <div className=\"harorat\">{massiv.temperatura - 1}&deg;</div>\n          </div>\n          <div className=\"box\">\n            <div className=\"kun\">{weekdayNameShort[weekDay]}</div>\n            <img\n              src={`http://openweathermap.org/img/wn/${massiv.icon}@2x.png`}\n              alt=\"error\" \n            />\n            <div className=\"harorat\">{massiv.temperatura}&deg;</div>\n          </div>\n          <div className=\"box\">\n            <div className=\"kun\">{weekdayNameShort[weekDay + 1]}</div>\n            <img\n              src={`http://openweathermap.org/img/wn/${massiv.icon}@2x.png`}\n              alt=\"error\" \n            />\n            <div className=\"harorat\">{massiv.temperatura + 1}&deg;</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}